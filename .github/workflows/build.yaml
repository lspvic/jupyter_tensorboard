name: Build

on:
  push:
    branches: master
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'


      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-3.7-${{ hashFiles('package.json') }}
          restore-keys: |
            pip-3.7-
            pip-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install dependencies
        run: python -m pip install -U jupyterlab~=3.0 jupyter_packaging~=0.7.9
      - name: Build the extension
        run: |
          jlpm
          jlpm run eslint:check
          python -m pip install .

          jupyter labextension list 2>&1 | grep -ie "jupyterlab_tensorboard.*OK"
          python -m jupyterlab.browser_check
